spring:
  application:
    name: challenge-service
  
  # Database configuration for Docker - MySQL
  datasource:
    url: jdbc:mysql://mysql:3306/goalapp_challenges?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: ${DB_USERNAME:goalapp_user}
    password: ${DB_PASSWORD:goalapp_password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        jdbc:
          time_zone: UTC
          batch_size: 20
        order_inserts: true
        order_updates: true
        generate_statistics: false
    database-platform: org.hibernate.dialect.MySQL8Dialect
    open-in-view: false
  
  kafka:
    bootstrap-servers: kafka:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
      properties:
        spring.json.type.mapping: >
          notificationEvent:org.goalapp.common.dto.NotificationEvent,
          createSharedGoalEvent:org.goalapp.common.dto.CreateSharedGoalEvent,
          goalCreatedEvent:org.goalapp.common.dto.GoalCreatedEvent
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
    consumer:
      group-id: challenge-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: false
      max-poll-records: 500
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: >
          notificationEvent:org.goalapp.common.dto.NotificationEvent,
          createSharedGoalEvent:org.goalapp.common.dto.CreateSharedGoalEvent,
          goalCreatedEvent:org.goalapp.common.dto.GoalCreatedEvent
        session.timeout.ms: 30000
        heartbeat.interval.ms: 3000
    listener:
      concurrency: 3
      poll-timeout: 3000

services:
  user-service:
    url: http://user-service:8081
    name: user-service
  goal-service:
    url: http://goal-service:8082
    name: goal-service
  notification-service:
    url: http://notification-service:8084
    name: notification-service

feign:
  client:
    config:
      default:
        connectTimeout: 10000
        readTimeout: 30000
        loggerLevel: full
        errorDecoder: org.goalapp.challenge.config.FeignConfig.CustomErrorDecoder
        retryer: org.goalapp.challenge.config.FeignConfig.CustomRetryer
      user-service:
        connectTimeout: 15000
        readTimeout: 30000
        loggerLevel: full
        url: http://user-service:8081
      goal-service:
        connectTimeout: 12000
        readTimeout: 25000
        loggerLevel: basic
        url: http://goal-service:8082
      notification-service:
        connectTimeout: 8000
        readTimeout: 20000
        loggerLevel: basic
        url: http://notification-service:8084
  httpclient:
    enabled: true
    max-connections: 200
    max-connections-per-route: 50
    connection-timeout: 10000
    connection-timer-repeat: 30000
  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response:
      enabled: true

resilience4j:
  circuitbreaker:
    instances:
      user-service:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
        ignoreExceptions:
          - java.lang.IllegalArgumentException
      goal-service:
        registerHealthIndicator: true
        slidingWindowSize: 8
        minimumNumberOfCalls: 4
        permittedNumberOfCallsInHalfOpenState: 2
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 3s
        failureRateThreshold: 60
        eventConsumerBufferSize: 10

  retry:
    instances:
      user-service:
        maxAttempts: 3
        waitDuration: 1000ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
      goal-service:
        maxAttempts: 2
        waitDuration: 500ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 1.5

  timelimiter:
    instances:
      user-service:
        timeoutDuration: 30s
        cancelRunningFuture: true
      goal-service:
        timeoutDuration: 25s
        cancelRunningFuture: true

logging:
  level:
    root: INFO
    org.goalapp.challenge: DEBUG
    org.goalapp.challenge.client: DEBUG
    org.goalapp.challenge.service: DEBUG
    org.goalapp.challenge.controller: DEBUG
    org.goalapp.common: DEBUG
    feign: DEBUG
    org.springframework.cloud.openfeign: DEBUG
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
    com.mysql.cj: WARN
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.web.client: DEBUG
    org.springframework.retry: DEBUG
    io.github.resilience4j: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
  file:
    name: /logs/challenge-service.log
    max-size: 100MB
    max-history: 30

server:
  port: 8083
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    max-connections: 8192
    accept-count: 100
    connection-timeout: 20000
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
